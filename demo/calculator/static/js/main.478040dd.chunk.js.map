{"version":3,"sources":["helpers/Theme.jsx","store/reducers/qualities.js","store/reducers/notification.js","components/NavButton.jsx","DataGrid.jsx","components/FormElements.jsx","Calculator.jsx","YarnCosting.jsx","Dashboard.jsx","About.jsx","App.jsx","store/index.js","reportWebVitals.js","index.js"],"names":["defaultTheme","createMuiTheme","globalTheme","palette","primary","main","secondary","info","typography","fontSize","theme","mixins","border","grey","transitions","duration","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","props","MuiTextField","size","variant","MuiButton","disableTouchRipple","MuiIconButton","overrides","MuiTabs","root","minHeight","MuiTab","breakpoints","up","minWidth","textColorInherit","textTransform","opacity","MuiFormLabel","color","text","asterisk","error","MuiToolbar","dense","MuiOutlinedInput","input","padding","spacing","backgroundColor","inputMarginDense","MuiAutocomplete","inputRoot","MuiDialogTitle","MuiDialogContent","dividers","Theme","ThemeProvider","children","state","action","type","payload","NOTIFICATION_TYPE","message","setNotification","withRouter","path","useTheme","otherProps","match","useRouteMatch","Button","style","component","RouteLink","to","useStyles","makeStyles","grid","borderSpacing","width","overflow","tableCell","margin","textAlign","fontWeight","borderRight","borderBottom","DataGrid","columns","data","filterText","showFooter","tdClassName","classes","useTable","useGlobalFilter","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","setGlobalFilter","useEffect","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","clsx","group","getFooterGroupProps","getFooterProps","formRoot","formRow","paddingTop","formInput","marginTop","autoComplete","img","maxWidth","height","marginLeft","formDate","FormRow","sizingProps","xs","items","React","Children","count","1","4","3","6","Grid","container","child","cloneElement","FormRowItem","item","FormInput","useState","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","Box","display","alignItems","FormLabel","required","label","onMouseEnter","event","currentTarget","onMouseLeave","Popover","pointerEvents","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","FormInputText","InputIcon","errorMsg","onChange","readOnly","FormControl","fullWidth","OutlinedInput","startAdornment","InputAdornment","position","data-label","data-required","inputProps","onBlur","FormHelperText","flexDirection","searchbar","gridarea","flexGrow","inputGridTd","gridCell","formReducer","newState","_","cloneDeep","set","value","gridReducer","get","push","splice","warpGridReducer","gridValue","perct","length","warp_total_ends","warp_reed","warp_panna","warp_reed_space","warp_weight","temp","warp_lassa_yards","warp_metre","weight","wastage","cost","rate","sizing_cost","sizing_rate","weftGridReducer","weaving_charges","weft_peek","weft_job_rate","weft_weight","weft_metre","weft_panna","weft_reed_space","getGridCols","basePath","formDispatch","otherCols","cellClassName","baseCols","Header","id","Cell","paddingLeft","paddingRight","index","IconButton","onClick","e","preventDefault","col","accessor","Footer","showTotal","total","useMemo","reduce","sum","values","target","concat","connect","qualities","dispatch","args","apply","clearNotification","editMode","isNull","isUndefined","useReducer","formData","formDataErr","onWarpTextChange","useCallback","name","onWeftTextChange","warpCols","weftCols","getDefaultRow","cols","forEach","Dialog","aria-labelledby","fullScreen","scroll","DialogTitle","DialogContent","autoFocus","sm","md","lg","xl","Paper","Typography","Divider","warps","panna","reed_space","wefts","warp_weight_wastage","weft_weight_wastage","total_weight","total_weight_wastage","actual_cost","DialogActions","justifyContent","onQualityClick","openCalc","setOpenCalc","selId","setSelId","homeRef","useRef","Link","original","href","search","setSearch","ref","placeholder","dashboardRoot","subMenu","top","bottomMenuContent","rightContent","navItems","YarnCosting","NavBar","SubMenu","Toolbar","AppBar","elevation","submenu","notify","setQualities","location","navSubItems","tmp","filter","a","res","err","fetchQualities","disableGutters","exact","redirect","Snackbar","autoHideDuration","reason","Alert","severity","reduxStore","createStore","combineReducers","qualitiesReducer","notifyReducer","App","StylesProvider","injectFirst","CssBaseline","store","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.478040dd.chunk.js","sourcesContent":["import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst defaultTheme = createMuiTheme();\n\nconst globalTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0089ef',\n        },\n        secondary: {\n            main: '#c0d6df',\n        },\n        info: {\n            main: '#fde74c'\n        },\n\n    },\n    typography: {\n        fontSize: 14,\n    }\n});\n\nexport const theme = createMuiTheme({\n    mixins: {\n        ...globalTheme.mixins,\n        border: '1px solid '+globalTheme.palette.grey[300]\n    },\n    transitions: {\n        duration: {\n          shortest: 50,\n          shorter: 100,\n          short: 150,\n          standard: 200,\n          complex: 175,\n          enteringScreen: 125,\n          leavingScreen: 95,\n        }\n    },\n    props: {\n        MuiTextField: {\n            size: 'small',\n            variant: 'outlined',\n        },\n        MuiButton: {\n            size: 'medium',\n            disableTouchRipple: true,\n        },\n        MuiIconButton: {\n            size: 'small',\n            disableTouchRipple: true,\n        }\n    },\n    overrides: {\n        MuiTabs: {\n            root: {\n                minHeight: 0,\n            },\n        },\n        MuiTab: {\n            root: {\n                minHeight: '40px',\n                [defaultTheme.breakpoints.up('sm')]: {\n                    minWidth: '80px',\n                },\n            },\n            textColorInherit: {\n                textTransform: 'none',\n                opacity: 1,\n            }\n        },\n        MuiButton: {\n            root: {\n                textTransform: 'none'\n            }\n        },\n        MuiFormLabel: {\n            root: {\n                color: defaultTheme.palette.text.primary,\n                fontSize: defaultTheme.typography.fontSize,\n            },\n            asterisk: {\n                color: defaultTheme.palette.error.main,\n            }\n        },\n        MuiToolbar: {\n            dense: {\n                minHeight: '42px',\n            }\n        },\n        MuiOutlinedInput: {\n            input: {\n                padding: defaultTheme.spacing(1, 1.5),\n                '&[readonly]':{\n                    backgroundColor: defaultTheme.palette.grey[200],\n                    opacity: 0.75\n                }\n            },\n            inputMarginDense: {\n                padding: defaultTheme.spacing(1, 1.5),\n            }\n        },\n        MuiAutocomplete: {\n            inputRoot: {\n                padding: '0px',\n            }\n        },\n        MuiDialogTitle: {\n            root: {\n                padding: defaultTheme.spacing(1),\n            }\n        },\n        MuiDialogContent: {\n            dividers: {\n                padding: defaultTheme.spacing(1, 0.5),\n            }\n        }\n    }\n}, globalTheme);\n\nexport default function Theme(props) {\n    return (\n        <ThemeProvider theme={theme}>\n            {props.children}\n        </ThemeProvider>\n    )\n}","export default (state={}, action) => {\n  switch(action.type) {\n    case 'SET_QUALITIES': {\n      return [\n        ...action.payload,\n      ];\n    }\n    default:\n      return state;\n  }\n}\n\nconst setQualities = (qualities)=>({\n  type: 'SET_QUALITIES',\n  payload: qualities,\n});\n\nconst getQualities = (state)=>state.qualities;\n\nexport {setQualities, getQualities};","const NOTIFICATION_TYPE = {\n  ERROR: 'error',\n  SUCCESS: 'success',\n  INFO: 'info',\n}\n\nexport default (state={}, action) => {\n  switch(action.type) {\n    case 'SET_NOTIFICATION': {\n      return {\n        ...state,\n        message: action.payload.message,\n        type: action.payload.type,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst setNotification = (type, message)=>({\n  type: 'SET_NOTIFICATION',\n  payload: {\n    type: type ? type : 'info',\n    message: message ? message : '',\n  }\n});\n\nexport {NOTIFICATION_TYPE, setNotification};","import { Button, ButtonBase, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useRouteMatch, Link as RouteLink, withRouter } from 'react-router-dom';\n\nconst NavButton = ({path, ...props}) => {\n  let theme = useTheme();\n  let {children, ...otherProps} = props;\n  let match = useRouteMatch({\n    path: path,\n  });\n  return <Button style={{fontSize: theme.typography.fontSize*1.1}} component={RouteLink} to={path} {...otherProps} color={match ? \"primary\" : \"default\"} disableTouchRipple>{children}</Button>;\n}\n\nexport default withRouter(NavButton);","import { makeStyles } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { useGlobalFilter, useTable } from 'react-table';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme)=>({\n  grid: {\n    borderSpacing: 0,\n    width: '100%',\n    overflow: 'auto',\n    border: theme.mixins.border,\n  },\n  tableCell: {\n    margin: 0,\n    textAlign: 'left',\n    fontWeight: 'initial',\n    padding: theme.spacing(1),\n    borderRight: theme.mixins.border,\n    borderBottom: theme.mixins.border,\n  },\n}));\n\nexport default function DataGrid({ columns, data, filterText, showFooter=false, tdClassName }) {\n  const classes = useStyles();\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data: data,\n  }, useGlobalFilter);\n\n  useEffect(()=>{\n    setGlobalFilter(filterText);\n  }, [filterText])\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()} className={classes.grid}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()} className={classes.tableCell}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()} className={clsx(classes.tableCell, tdClassName)}>{cell.render('Cell')}</td>\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n      {showFooter &&\n      <tfoot>\n        {footerGroups.map(group => (\n          <tr {...group.getFooterGroupProps()}>\n            {group.headers.map(column => (\n              <td {...column.getFooterProps()} className={clsx(classes.tableCell, tdClassName)}>{column.render('Footer')}</td>\n            ))}\n          </tr>\n        ))}\n      </tfoot>}\n    </table>\n  )\n}","import React, { useMemo, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, OutlinedInput, CircularProgress, Divider, FormControl, FormHelperText, FormLabel, Grid, InputAdornment, MenuItem, Popover, Select, TextField, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ColorPalette, ColorButton } from 'material-ui-color';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  formRoot: {\n    padding: '1rem'\n  },\n  formRow: {\n    paddingTop: '1rem',\n  },\n  formInput: {\n    marginTop: '0.25rem'\n  },\n  autoComplete: {\n    padding: theme.spacing(0.25),\n  },\n  img: {\n    maxWidth: '100%',\n    height: 'auto'\n  },\n  info: {\n    color: theme.palette.info.main,\n    marginLeft: '0.25rem',\n    fontSize: '1rem',\n  },\n  formDate: {\n\n  }\n}));\n\n\nexport function Form({children}) {\n  return (\n    <form noValidate autoComplete=\"off\">\n      {children}\n    </form>\n  );\n}\n\nexport function FormRow({children}) {\n  const classes = useStyles();\n  let sizingProps = {xs: 12};\n  let items = React.Children.count(children);\n  let factor =  {\n    1: 12,\n    4: 3,\n    3: 4,\n    6: 2,\n  }\n  sizingProps['md'] = sizingProps['sm'] = sizingProps['lg'] = factor[items] || 12;\n\n  return(\n    <Grid container spacing={1} className={classes.formRow}>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, sizingProps);\n      })}\n    </Grid>\n  );\n}\n\nexport function FormRowItem({children, ...props}) {\n  return (\n    <Grid item {...props}>\n      {children}\n    </Grid>\n  );\n}\n\nexport function FormInput({children, info, ...props}) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return (\n    <Box>\n      <Box display=\"flex\" style={{alignItems: 'flex-end'}}>\n        <FormLabel component={Box} required={props.required}>\n          {props.label}\n        </FormLabel>\n          {info &&\n            <>\n            <HelpOutlineIcon className={classes.info} onMouseEnter={handlePopoverOpen} onMouseLeave={handlePopoverClose}/>\n            <Popover\n              style={{pointerEvents: 'none'}}\n              open={open}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'center',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'center',\n                horizontal: 'left',\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              {info}\n            </Popover>\n            </>\n          }\n      </Box>\n      {children}\n    </Box>\n  );\n}\n\nexport class FormFieldValidator {\n  constructor(formValidators, setFieldError) {\n    this.formValidators = formValidators || {};\n    this.setFieldError = setFieldError || (()=>{});\n  }\n\n  getDefaultValidator(name) {\n    const VALIDATORS = {\n      'required': (value)=>{\n        return (value != null && value != '' && typeof(value) != 'undefined');\n      },\n      'email': (value)=>{\n        return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(value);\n      },\n      'password': (value)=>{\n        return /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,40})/.test(value);\n      },\n      'regex': (value, exp)=>{\n        const checker = new RegExp(exp);\n        return checker.test(value);\n      }\n    }\n\n    return VALIDATORS[name] || (()=>true);\n  }\n\n  doValidation(value, validators, errorMessages) {\n    let errMsg = '';\n    let validatorParam = null;\n    validators = validators || [];\n    errorMessages = errorMessages || [];\n\n    for(let i=0; i<validators.length; i++) {\n      let validator = validators[i];\n      if(typeof(validator) === 'string') {\n        validator = this.getDefaultValidator(validator);\n      } else if(typeof(validator) === 'object') {\n        validatorParam = validator.param;\n        validator = this.getDefaultValidator(validator.type);\n      }\n\n      if(!validator(value, validatorParam)) {\n        errMsg = errorMessages[i] || 'Invalid';\n        break;\n      }\n    }\n    return errMsg;\n  }\n\n  validateField(name, formData) {\n    let errMsg = '';\n    let fieldValidators = this.formValidators[name];\n    if(fieldValidators) {\n      errMsg = this.doValidation(formData[name], fieldValidators.validators, fieldValidators.messages);\n      this.setFieldError(name, errMsg);\n    }\n    return errMsg;\n  }\n\n  validateAll(formData) {\n    let isAllValid = true;\n    Object.keys(this.formValidators).forEach(name => {\n      let errMsg = this.validateField(name, formData);\n      if(Boolean(errMsg)) {\n        isAllValid = false;\n      }\n    });\n    return isAllValid;\n  }\n}\n\nexport function FormInputText({InputIcon, errorMsg, required, onChange, label, readOnly, info, ...props}) {\n  const classes = useStyles();\n\n  return (\n    <FormInput required={required} label={label} info={info}>\n      <FormControl error={Boolean(errorMsg)} fullWidth>\n        <OutlinedInput\n          variant=\"outlined\"\n          startAdornment={InputIcon &&\n            <InputAdornment position=\"start\">{typeof(InputIcon) === 'string'\n              ? <span>{InputIcon}</span> : <InputIcon fontSize='small' />}</InputAdornment>}\n          fullWidth\n          className={classes.formInput}\n          error={Boolean(errorMsg)}\n          data-label={label}\n          data-required={required}\n          inputProps={{\n            'data-label': label,\n            'data-required': required,\n            readOnly: Boolean(readOnly)\n          }}\n          onChange={onChange}\n          onBlur={onChange}\n          {...props}\n        />\n        <FormHelperText>{errorMsg}</FormHelperText>\n      </FormControl>\n    </FormInput>\n  );\n}\n\nexport function FormInputSelect({\n    errorMsg, required, onChange, label, options, firstEmpty=false, loading, multiple, hasSearch=false,\n    labelKey='label', valueKey='value', ...props}) {\n  const classes = useStyles();\n  options = options || [];\n\n  const noOptions = (options.length == 0);\n\n  if(hasSearch) {\n    return (\n      <FormInput required={required} label={label}>\n        <FormControl error={Boolean(errorMsg)} fullWidth>\n          <Autocomplete\n            multiple={multiple}\n            options={options}\n            loading={loading}\n            filterSelectedOptions\n            onChange={onChange}\n            className={clsx(classes.formInput)}\n            getOptionLabel={(option) => typeof(option) === 'string' ? option : option[labelKey]}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"\"\n                placeholder={props.placeholder}\n                error={Boolean(errorMsg)}\n                inputProps={{\n                  ...params.inputProps,\n                  className: classes.autoComplete,\n                }}\n              />\n            )}\n            ChipProps={{\n              variant:\"outlined\",\n            }}\n            {...props}\n          />\n          <FormHelperText>{errorMsg}</FormHelperText>\n        </FormControl>\n      </FormInput>\n    );\n  } else {\n    return (\n      <FormInput required={required} label={label}>\n        <FormControl error={Boolean(errorMsg)} fullWidth>\n          <Select\n            onChange={onChange}\n            onBlur={onChange}\n            variant=\"outlined\"\n            className={classes.formInput}\n            fullWidth\n            helperText={errorMsg}\n            {...props}\n          >\n            {noOptions && <MenuItem value=''><em>{loading ? 'Loading...' : 'None'}</em></MenuItem>}\n            {!noOptions && firstEmpty && <MenuItem value=\"\"><em>None</em></MenuItem>}\n            {options.map((opt)=>{\n              let label = '', value = '';\n\n              if(typeof(opt) === 'string') {\n                label = value = opt;\n              } else {\n                label = opt[labelKey];\n                value = opt[valueKey];\n              }\n              return  <MenuItem key={value} value={value}>{label}</MenuItem>\n            })}\n          </Select>\n          <FormHelperText>{errorMsg}</FormHelperText>\n        </FormControl>\n      </FormInput>\n    );\n  }\n}\n\nexport function FormInputColor({\n    errorMsg, required, onChange, label, value}) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const palette = {\n    C1: \"#FF6633\",\n    C2: \"#FFB399\",\n    C3: \"#FF33FF\",\n    C4: \"#FFFF99\",\n    C5: \"#00B3E6\",\n    C6: \"#E6B333\",\n    C7: \"#3366E6\",\n    C8: \"#999966\",\n    C9: \"#99FF99\",\n    C10: \"#B34D4D\",\n    C11: \"#80B300\",\n    C12: \"#809900\",\n    C13: \"#E6B3B3\",\n    C14: \"#6680B3\",\n    C15: \"#66991A\",\n    C16: \"#FF99E6\",\n    C17: \"#CCFF1A\",\n    C18: \"#FF1A66\",\n    C19: \"#E6331A\",\n    C20: \"#33FFCC\",\n    C21: \"#66994D\",\n    C22: \"#B366CC\",\n    C23: \"#4D8000\",\n    C24: \"#B33300\",\n    C25: \"#CC80CC\",\n    C26: \"#66664D\",\n    C27: \"#991AFF\",\n    C28: \"#E666FF\",\n    C29: \"#4DB3FF\",\n    C30: \"#1AB399\",\n    C31: \"#E666B3\",\n    C32: \"#33991A\",\n    C33: \"#CC9999\",\n    C34: \"#B3B31A\",\n    C35: \"#00E680\",\n    C36: \"#4D8066\",\n    C37: \"#809980\",\n    C38: \"#E6FF80\",\n    C39: \"#1AFF33\",\n    C40: \"#999933\",\n    C41: \"#FF3380\",\n    C42: \"#CCCC00\",\n    C43: \"#66E64D\",\n    C44: \"#4D80CC\",\n    C45: \"#9900B3\",\n    C46: \"#E64D66\",\n    C47: \"#4DB380\",\n    C48: \"#FF4D4D\",\n    C49: \"#99E6E6\",\n  };\n\n  onChange = onChange || (()=>{});\n\n  return (\n    <FormInput required={required} label={label}>\n      <Popover\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={()=>setAnchorEl(null)}\n        anchorEl={anchorEl}\n        PaperProps={{\n          style: {maxWidth: '200px'}\n        }}\n      >\n        <ColorPalette palette={palette} onSelect={(k, v)=>{\n          onChange(v);\n          setAnchorEl(null);\n        }}/>\n      </Popover>\n      <ColorButton disableRipple className={classes.formInput} color={value} onClick={(e)=>setAnchorEl(e.target)}\n      />\n    </FormInput>\n  );\n}\n\nexport function FormHeader({title, hasTopDivider, loadingText}) {\n  return (\n    <>\n      {hasTopDivider && <Divider style={{marginTop: '1rem', marginBottom: '1rem'}} variant=\"middle\" />}\n      <Box display=\"flex\">\n      <Typography variant=\"h6\" color=\"primary\">{title}</Typography>\n      {loadingText &&\n      <>\n      <CircularProgress size={24} style={{marginLeft: 15, position: 'relative', top: 4}} />\n      <Typography style={{alignSelf:'center'}}>&nbsp;{loadingText}</Typography>\n      </>}\n      </Box>\n    </>\n  );\n}\n\nexport function PasswordPolicy() {\n  return (\n    <Box style={{padding: '0.5rem'}}>\n      <Typography>\n      * Must contain one digit from 0-9<br/>\n      * Must contain one lowercase characters<br/>\n      * Must contain one uppercase characters<br/>\n      * Must contain one special symbols in the list \"@#$%\"<br/>\n      * Length at least 8 characters and maximum of 40<br/>\n      </Typography>\n    </Box>\n  )\n}","import { Box, Button, Card, CardContent, CardHeader, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, IconButton, makeStyles, OutlinedInput, Paper, Slide, Typography } from '@material-ui/core';\nimport React, { useCallback, useMemo, useReducer, useState } from 'react';\nimport { connect } from 'react-redux';\nimport DataGrid from './DataGrid';\nimport { setNotification } from './store/reducers/notification';\nimport _ from 'lodash';\nimport { FormRowItem, FormInputText, FormRow } from './components/FormElements';\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  searchbar: {\n    padding: theme.spacing(1),\n    display: 'flex',\n  },\n  gridarea: {\n    flexGrow: 1,\n  },\n  inputGridTd: {\n    padding: '0px',\n  },\n  gridCell: {\n    '&:not(.Mui-focused)': {\n      '& .MuiOutlinedInput-notchedOutline': {\n        border: 0,\n      }\n    }\n  }\n}));\n\nconst formReducer = (state, action)=>{\n  let newState = _.cloneDeep(state);\n  let rows = null;\n  switch(action.type) {\n    case 'set_value':\n      _.set(newState, action.path, action.value);\n      if(action.gridReducer) {\n        newState = action.gridReducer(newState, true);\n      }\n      break;\n    case 'add_grid_row':\n      rows = _.get(newState, action.path, []);\n      rows.push(action.value);\n      _.set(newState, action.path, rows);\n      if(action.gridReducer) {\n        newState = action.gridReducer(newState);\n      }\n      break;\n    case 'remove_grid_row':\n      rows = _.get(newState, action.path, []);\n      rows.splice(action.value, 1);\n      _.set(newState, action.path, rows);\n      if(action.gridReducer) {\n        newState = action.gridReducer(newState);\n      }\n      break;\n  }\n  return newState;\n}\n\nconst warpGridReducer = (state)=>{\n  let gridValue = state['warps'];\n  if(!gridValue) return state;\n\n  let perct = (100/gridValue.length);\n  state.warp_total_ends = state.warp_reed * (state.warp_panna + state.warp_reed_space);\n  state.warp_weight = 0;\n  for(let row of gridValue) {\n    row.perct = perct;\n    let temp = (\n      state.warp_total_ends * state.warp_lassa_yards/(1852)/row.count/state.warp_metre)\n        *(row.perct/100);\n\n    row.weight = temp + (row.wastage * temp)/100;\n    state.warp_weight += row.weight;\n\n    row.cost = row.weight * row.rate;\n    row.sizing_cost = row.weight * row.sizing_rate;\n  }\n\n  return state;\n}\n\nconst weftGridReducer = (state)=>{\n  let gridValue = state['wefts'];\n  if(!gridValue) return state;\n\n  let perct = (100/gridValue.length);\n  state.weaving_charges = state.weft_peek * state.weft_job_rate;\n  state.weft_weight = 0;\n  for(let row of gridValue) {\n    row.perct = perct;\n    let temp =\n      (state.weft_metre * (state.weft_panna + state.weft_reed_space) * state.weft_peek/(1693.33*row.count))\n        *(row.perct/100);\n\n    row.weight = temp + (row.wastage * temp)/100;\n    state.weft_weight += row.weight;\n\n    row.cost = row.weight * row.rate;\n  }\n\n  return state;\n}\n\nfunction getGridCols(basePath, formDispatch, gridReducer, otherCols, cellClassName) {\n  let baseCols = [{\n    Header: '',\n    id: 'id',\n    Cell: ({row})=>{\n      return <span style={{paddingLeft: '0.25rem', paddingRight: '0.25rem', fontWeight: 'bold'}}>{row.index+1}</span>;\n    }\n  },\n  {\n    Header: '',\n    id: 'btn-del',\n    Cell: ({row})=>{\n      return <IconButton onClick={(e)=>{\n        e.preventDefault();\n        formDispatch({\n          type: 'remove_grid_row',\n          path: basePath,\n          value: row.index,\n          gridReducer: gridReducer,\n        });\n      }}><DeleteForeverRoundedIcon /></IconButton>\n    }\n  }];\n\n  for(const col of otherCols) {\n    baseCols.push({\n      Header: col.Header,\n      accessor: col.accessor,\n      Footer: col.showTotal ? (info)=>{\n        const total = React.useMemo(\n          () =>\n            info.rows.reduce((sum, row) => (row.values[col.accessor] || 0) + sum, 0),\n          [info.rows]\n        )\n        return <OutlinedInput fullWidth inputProps={{style: {fontWeight: 'bold'}}} className={cellClassName} value={total} type=\"number\" readOnly={true} />\n      } : '',\n      Cell: ({value, row, column})=>{\n        return <OutlinedInput fullWidth className={cellClassName} type=\"number\" value={value} readOnly={col.readOnly} onChange={(e)=>{\n          let value = e.target.value;\n          formDispatch({\n            type: 'set_value',\n            path: basePath.concat([row.index, column.id]),\n            value: value,\n            gridReducer: gridReducer,\n          });\n        }} />\n      }\n    });\n  }\n\n  return baseCols;\n}\n\nfunction Calculator({open, onClose, data}) {\n  const classes = useStyles();\n  const editMode = !_.isNull(data) && !_.isUndefined(data);\n  const [formData, formDispatch] = useReducer(formReducer, data);\n  const [formDataErr, setFormDataErr] = useState({});\n\n  const onWarpTextChange = useCallback((e, name) => {\n    let value = e;\n    if(e && e.target) {\n      name = e.target.name;\n      value = e.target.value;\n    }\n    formDispatch({\n      type: 'set_value',\n      path: name,\n      value: value,\n      gridReducer: warpGridReducer,\n    });\n  });\n\n  const onWeftTextChange = useCallback((e, name) => {\n    let value = e;\n    if(e && e.target) {\n      name = e.target.name;\n      value = e.target.value;\n    }\n    formDispatch({\n      type: 'set_value',\n      path: name,\n      value: value,\n      gridReducer: weftGridReducer,\n    });\n  });\n\n  const warpCols = useMemo(()=>getGridCols(['warps'], formDispatch, warpGridReducer, [\n    {\n      Header: 'Count',\n      accessor: 'count',\n    },\n    {\n      Header: 'Perct.',\n      accessor: 'perct',\n    },\n    {\n      Header: 'Wastage',\n      accessor: 'wastage',\n    },\n    {\n      Header: 'Rate',\n      accessor: 'rate',\n    },\n    {\n      Header: 'Sizing rate',\n      accessor: 'sizing_rate',\n      Footer: 'check;',\n    },\n    {\n      Header: 'Weight',\n      accessor: 'weight',\n      readOnly: true,\n      showTotal: true,\n    },\n    {\n      Header: 'Warp cost',\n      accessor: 'cost',\n      readOnly: true,\n      showTotal: true,\n    },\n    {\n      Header: 'Warp sizing cost',\n      accessor: 'sizing_cost',\n      readOnly: true,\n      showTotal: true,\n    },\n  ], classes.gridCell), []);\n\n  const weftCols = useMemo(()=>getGridCols(['wefts'], formDispatch, weftGridReducer, [\n    {\n      Header: 'Count',\n      accessor: 'count',\n    },\n    {\n      Header: 'Perct.',\n      accessor: 'perct',\n    },\n    {\n      Header: 'Wastage',\n      accessor: 'wastage',\n    },\n    {\n      Header: 'Rate',\n      accessor: 'rate',\n    },\n    {\n      Header: 'Weight',\n      accessor: 'weight',\n      readOnly: true,\n      showTotal: true,\n    },\n    {\n      Header: 'Weft cost',\n      accessor: 'cost',\n      readOnly: true,\n      showTotal: true,\n    },\n  ], classes.gridCell), []);\n\n  const getDefaultRow = (cols) => {\n    let row = {}\n    cols.forEach((col)=>{\n      row[col.accessor] = 0;\n    });\n    return row;\n  }\n\n  return (\n    <Dialog onClose={onClose} aria-labelledby=\"simple-dialog-title\" open={open} fullScreen scroll='paper'>\n      <DialogTitle id=\"simple-dialog-title\">{editMode ? 'Update quality' : 'Add new quality'}</DialogTitle>\n      <DialogContent dividers={true}>\n        <FormInputText autoFocus label=\"Name\" name='name' value={formData.name}\n          required errorMsg={formDataErr.name} onChange={onWeftTextChange} />\n        <Grid container spacing={1}>\n          <Grid item sm={12} md={12} lg={10} xl={10}>\n            <Paper style={{height: '100%'}}>\n              <Typography variant=\"h6\" style={{textAlign: 'center', padding: '0.5rem'}}>Warp</Typography>\n              <Divider />\n              <Box style={{padding: '0.5rem'}}>\n                <FormRow>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" type=\"number\" label=\"Reed\" name='warp_reed' value={formData.warp_reed}\n                      required errorMsg={formDataErr.warp_reed} onChange={onWarpTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Panna\" name='warp_panna' value={formData.warp_panna}\n                      required errorMsg={formDataErr.warp_panna} onChange={onWarpTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Reed space\" name='warp_reed_space' value={formData.warp_reed_space}\n                      required errorMsg={formDataErr.warp_reed_space} onChange={onWarpTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Lassa(Yards)\" name='warp_lassa_yards' value={formData.warp_lassa_yards}\n                      required errorMsg={formDataErr.warp_lassa_yards} onChange={onWarpTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Metre\" name='warp_metre' value={formData.warp_metre}\n                      required errorMsg={formDataErr.warp_metre} onChange={onWarpTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Total ends\" name='warp_total_ends' value={formData.warp_total_ends}\n                      readOnly />\n                  </FormRowItem>\n                </FormRow>\n              </Box>\n              <DataGrid columns={warpCols} data={formData.warps || []} showFooter={true} tdClassName={classes.inputGridTd} />\n              <Button variant=\"outlined\" color=\"primary\" onClick={()=>{\n                formDispatch({\n                  type: 'add_grid_row',\n                  path: 'warps',\n                  value: getDefaultRow(warpCols),\n                  gridReducer: warpGridReducer,\n                });\n              }}>Add warp</Button>\n              <Divider style={{marginTop: '0.5rem'}} />\n              <Typography variant=\"h6\" style={{textAlign: 'center', padding: '0.5rem'}}>Weft</Typography>\n              <Divider />\n              <Box style={{padding: '0.5rem'}}>\n                <FormRow>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Metre\" name='weft_metre' value={formData.weft_metre}\n                      required errorMsg={formDataErr.weft_metre} onChange={onWeftTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Panna\" name='weft_panna' value={formData.weft_panna}\n                      required errorMsg={formDataErr.panna} onChange={onWeftTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Reed space\" name='weft_reed_space' value={formData.weft_reed_space}\n                      required errorMsg={formDataErr.reed_space} onChange={onWeftTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Peek\" name='weft_peek' value={formData.weft_peek}\n                      required errorMsg={formDataErr.weft_peek} onChange={onWeftTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Job rate\" name='weft_job_rate' value={formData.weft_job_rate}\n                      required errorMsg={formDataErr.weft_job_rate} onChange={onWeftTextChange} />\n                  </FormRowItem>\n                  <FormRowItem>\n                    <FormInputText type=\"number\" label=\"Weaving charges\" name='weaving_charges' value={formData.weaving_charges}\n                      readOnly />\n                  </FormRowItem>\n                </FormRow>\n              </Box>\n              <DataGrid columns={weftCols} data={formData.wefts || []} showFooter={true} tdClassName={classes.inputGridTd} />\n              <Button variant=\"outlined\" color=\"primary\" onClick={()=>{\n                formDispatch({\n                  type: 'add_grid_row',\n                  path: 'wefts',\n                  value: getDefaultRow(weftCols),\n                  gridReducer: weftGridReducer,\n                });\n              }}>Add weft</Button>\n            </Paper>\n          </Grid>\n          <Grid item sm={12} md={12} lg={2} xl={2}>\n            <Paper style={{height: '100%'}}>\n              <Typography variant=\"h6\" style={{textAlign: 'center', padding: '0.5rem'}}>Summary</Typography>\n              <Divider />\n              <Box style={{padding: '0.5rem'}}>\n                <FormInputText type=\"number\" label=\"Warp weight\" name='warp_weight' value={formData.warp_weight} readOnly />\n                <Box style={{marginTop: '0.5rem'}}>\n                  <FormInputText type=\"number\" label=\"Warp weight w/wastage\" name='warp_weight_wastage'\n                    value={formData.warp_weight_wastage} readOnly />\n                </Box>\n                <Box style={{marginTop: '0.5rem'}}>\n                  <FormInputText type=\"number\" label=\"Weft weight\" name='weft_weight'\n                    value={formData.weft_weight} readOnly />\n                </Box>\n                <Box style={{marginTop: '0.5rem'}}>\n                  <FormInputText type=\"number\" label=\"Weft weight w/wastage\" name='weft_weight_wastage'\n                    value={formData.weft_weight_wastage} readOnly />\n                </Box>\n                <Box style={{marginTop: '0.5rem'}}>\n                  <FormInputText type=\"number\" label=\"Total weight\" name='total_weight'\n                    value={formData.total_weight} readOnly />\n                </Box>\n                <Box style={{marginTop: '0.5rem'}}>\n                  <FormInputText type=\"number\" label=\"Total weight w/wastage\" name='total_weight_wastage'\n                    value={formData.total_weight_wastage} readOnly />\n                </Box>\n                <Box style={{marginTop: '0.5rem'}}>\n                  <FormInputText type=\"number\" label=\"Actual cost\" name='actual_cost'\n                    value={formData.actual_cost} readOnly />\n                </Box>\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions style={{justifyContent: 'flex-start'}}>\n        <Button variant=\"contained\" color=\"primary\">Save</Button>\n        <Button variant=\"outlined\" color=\"primary\" style={{marginLeft: '0.5rem'}}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect((state)=>({\n  qualities: state.qualities\n}), (dispatch)=>({\n  setNotification: (...args)=>{dispatch(setNotification.apply(this, args))},\n  clearNotification: ()=>{dispatch(setNotification(null, null))},\n}))(Calculator);","import { Box, Button, Link, makeStyles, Modal, OutlinedInput, useTheme } from '@material-ui/core';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport DataGrid from './DataGrid';\nimport { setNotification } from './store/reducers/notification';\nimport { useRouteMatch, Link as RouteLink, withRouter } from 'react-router-dom';\nimport Calculator from './Calculator';\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n  },\n  searchbar: {\n    padding: theme.spacing(1),\n    display: 'flex',\n  },\n  gridarea: {\n    flexGrow: 1,\n  }\n}));\n\nfunction YarnCosting({qualities, onQualityClick}) {\n  const classes = useStyles();\n  const [openCalc, setOpenCalc] = useState(false);\n  const [selId, setSelId] = useState({});\n  const homeRef = useRef();\n  const columns = useMemo(()=>[\n    {\n      Header: 'Name',\n      accessor: 'name',\n      Cell: ({value, row})=>{\n        return <Link onClick={()=>{\n          setSelId(row.original);\n          setOpenCalc(true);\n        }} href=\"#\">{value}</Link>\n      }\n    },\n    {\n      Header: 'Notes',\n      accessor: 'notes',\n    },\n  ], []);\n\n  const [search, setSearch] = useState('');\n\n  return (\n    <Box>\n      <Box className={classes.root} ref={homeRef}>\n        <Box className={classes.searchbar}>\n          <OutlinedInput value={search} onChange={(e)=>{setSearch(e.target.value)}} style={{minWidth: '20%'}} placeholder=\"Search quality\"/>\n          <Button variant=\"contained\" color=\"primary\" onClick={()=>{\n            setSelId(null);\n            setOpenCalc(true);\n          }} style={{marginLeft: '0.5rem'}}>Add new</Button>\n        </Box>\n        <Box className={classes.gridarea}>\n          <DataGrid columns={columns} data={qualities} filterText={search}/>\n        </Box>\n      </Box>\n      <Calculator open={openCalc} onClose={()=>setOpenCalc(false)} data={selId} />\n    </Box>\n  )\n}\n\nexport default connect((state)=>({\n  qualities: state.qualities\n}), (dispatch)=>({\n  setNotification: (...args)=>{dispatch(setNotification.apply(this, args))},\n  clearNotification: ()=>{dispatch(setNotification(null, null))},\n}))(YarnCosting);","import { AppBar, Box, makeStyles, Snackbar, Toolbar, Typography } from '@material-ui/core';\nimport React, { useEffect, useMemo } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NavButton from './components/NavButton';\nimport { connect } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert';\nimport { NOTIFICATION_TYPE, setNotification } from './store/reducers/notification';\nimport About from './About';\nimport axios from 'axios';\nimport { BASE_URL } from './api';\nimport YarnCosting from './YarnCosting';\nimport { setQualities } from './store/reducers/qualities';\n\nconst useStyles = makeStyles((theme)=>({\n  dashboardRoot: {\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'column',\n  },\n  subMenu: {\n    top: '42px',\n  },\n  bottomMenuContent: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n  },\n  rightContent: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nconst navItems = [\n  {label: 'Yarn costing', path: '/yarncosting', component: YarnCosting},\n  {label: 'About', path: '/about', component: About},\n];\n\nfunction NavBar({navItems}) {\n  return <Box>\n    {navItems.map((item)=>{\n      return <NavButton key={item.path} path={item.path}>{item.label}</NavButton>;\n    })}\n  </Box>\n}\n\nfunction SubMenu({item}) {\n  const classes = useStyles();\n  let match = useRouteMatch({\n    path: item.path,\n  });\n  if(match) {\n    return (\n      <>\n      <Box><Toolbar variant=\"dense\"/></Box>\n      <AppBar color=\"default\" elevation={1} component=\"div\" className={classes.subMenu}>\n        <Toolbar variant=\"dense\">\n          <NavBar navItems={item.submenu} />\n        </Toolbar>\n      </AppBar>\n      </>\n    );\n  } else {\n    return <></>\n  }\n}\n\nfunction Dashboard({location, ...props}) {\n  const classes = useStyles();\n  const navSubItems = useMemo(()=>{\n    let tmp = []\n    navItems.filter((item)=>Boolean(item.submenu)).forEach((item)=>{\n      tmp.push(...item.submenu);\n    });\n    return tmp;\n  });\n\n  useEffect(()=>{\n    /* load masters */\n    async function fetchQualities() {\n      try {\n        // let res = await axios.get(BASE_URL.EMPLOYEE);\n        let res = {\n          data: [{\n            'id': 1,\n            'name': 'aditya',\n            'notes': 'the best quality'\n          },{\n            'id': 2,\n            'name': 'aditya tosh',\n            'notes': 'the best quality'\n          },{\n            'id': 2,\n            'name': 'aditya tosh',\n            'notes': 'the best quality'\n          },{\n            'id': 2,\n            'name': 'aditya tosh',\n            'notes': 'the best quality'\n          },{\n            'id': 2,\n            'name': 'aditya tosh',\n            'notes': 'the best quality'\n          },{\n            'id': 2,\n            'name': 'aditya tosh',\n            'notes': 'the best quality'\n          },{\n            'id': 2,\n            'name': 'aditya tosh',\n            'notes': 'the best quality'\n          },{\n            'id': 2,\n            'name': 'aditya tosh',\n            'notes': 'the best quality'\n          }]\n        };\n        props.setQualities(res.data);\n      } catch(err) {\n        props.setNotification(NOTIFICATION_TYPE.ERROR, err);\n      }\n    }\n    fetchQualities();\n  }, []);\n  return(\n    <Box className={classes.dashboardRoot}>\n      <Box><Toolbar variant=\"dense\"/></Box>\n      <AppBar color=\"default\" elevation={1} component=\"div\">\n        <Toolbar variant=\"dense\" disableGutters>\n          <Box display=\"flex\" style={{padding: '0rem 0.5rem'}} alignItems=\"center\">\n            {/* <Logo height=\"3em\" width=\"3em\"/> */}\n            <Typography variant=\"h6\" style={{color: '#d94874'}}>\n              Calculators\n            </Typography>\n          </Box>\n          <NavBar navItems={navItems} />\n        </Toolbar>\n      </AppBar>\n      {navItems.filter((item)=>Boolean(item.submenu)).map((item)=>{\n        return <SubMenu item={item}/>\n      })}\n        <Box className={classes.bottomMenuContent}>\n          <Switch>\n            {[...navItems, ...navSubItems].map((item)=>{\n              return (\n                <Route key={item.path} exact path={item.path} component={item.component}>\n                  {item.redirect && <Redirect to={item.redirect} />}\n                </Route>\n              );\n            })}\n            <Route>\n              <Redirect to='/yarncosting' />\n            </Route>\n          </Switch>\n        </Box>\n      <Snackbar\n        open={Boolean(props.notify.message)}\n        autoHideDuration={2500}\n        onClose={(event, reason)=>{\n          if (reason === 'clickaway') {\n            return;\n          }\n          props.clearNotification();\n        }}\n      >\n        <Alert severity={props.notify.type}>\n          {props.notify.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  )\n}\n\nexport default connect((state)=>({notify: state.notify}), (dispatch)=>({\n  setNotification: (...args)=>{dispatch(setNotification.apply(this, args))},\n  clearNotification: ()=>{dispatch(setNotification(null, null))},\n  setQualities: (payload)=>{dispatch(setQualities(payload))},\n}))(Dashboard);","import { Link, Typography } from '@material-ui/core';\nimport React from 'react';\n\nexport default function About() {\n  return (\n  <>\n  <Typography>\n    Attendance and Payroll management is one of our milestone project.\n    We've done research and worked hard to make this software easy to use.\n  </Typography>\n  <Typography>\n    <Typography>Contact:</Typography>\n    <Typography>Aditya Toshniwal - <Link href = \"mailto: aditya.toshniwal14@gmail.com\">aditya.toshniwal14@gmail.com</Link></Typography>\n    <Typography>Shreegopal Totala - <Link href = \"mailto: rajatotala@gmail.com\">rajatotala@gmail.com</Link></Typography>\n  </Typography>\n  </>\n  );\n}","import React from 'react';\nimport { CssBaseline, StylesProvider } from '@material-ui/core';\nimport Theme from './helpers/Theme';\nimport getStore from './store/index';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Dashboard';\n\nconst reduxStore = getStore();\n\nexport default function App() {\n    return (\n        <Theme>\n            <StylesProvider injectFirst>\n                <CssBaseline />\n                  <ReduxProvider store={reduxStore}>\n                      <Router>\n                        <Route path='/' component={Dashboard} />\n                      </Router>\n                  </ReduxProvider>\n            </StylesProvider>\n        </Theme>\n    )\n}","/**\n * Redux store setup.\n */\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\n\n// Logger with default options\nimport qualitiesReducer from './reducers/qualities';\nimport notifyReducer from './reducers/notification';\n\nexport default function getStore() {\n  let initialState = {\n    qualities: [],\n    notify: {\n      type: null,\n      message: null,\n    },\n  };\n  const store = createStore(combineReducers({\n    qualities: qualitiesReducer,\n    notify: notifyReducer,\n  }), initialState);\n  return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}